# Generated by Django 4.2.13 on 2024-07-11 05:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Defects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color_code', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Defects',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='MachineParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=200)),
                ('color_code', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'MachineParameters',
            },
        ),
        migrations.CreateModel(
            name='Machines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Machines',
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_name', models.CharField(max_length=100, unique=True, verbose_name='Plant')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'db_table': 'Plant',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.plant')),
            ],
            options={
                'db_table': 'Products',
            },
        ),
        
        migrations.CreateModel(
            name='ShampooPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=250, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('defects', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.defects')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.department')),
                ('machines', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.machines')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.products')),
            ],
            options={
                'db_table': 'ShampooPlant',
            },
        ),
        migrations.CreateModel(
            name='RootCauseAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rca1', models.CharField(blank=True, max_length=255, null=True)),
                ('rca2', models.CharField(blank=True, max_length=255, null=True)),
                ('rca3', models.CharField(blank=True, max_length=255, null=True)),
                ('rca4', models.CharField(blank=True, max_length=255, null=True)),
                ('rca5', models.CharField(blank=True, max_length=255, null=True)),
                ('rca6', models.CharField(blank=True, max_length=255, null=True)),
                ('defect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.defects')),
            ],
            options={
                'db_table': 'Root Cause Analysis',
            },
        ),
        migrations.CreateModel(
            name='NMBDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=250, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('defects', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.defects')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.department')),
                ('machines', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.machines')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.products')),
            ],
            options={
                'db_table': 'NMBDashboard',
            },
        ),
        migrations.CreateModel(
            name='MachineTemperatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horizontal', models.CharField(blank=True, max_length=100, null=True)),
                ('teeth', models.BooleanField(blank=True, default=False, null=True)),
                ('coder', models.BooleanField(blank=True, default=False, null=True)),
                ('vertical', models.CharField(blank=True, max_length=1000, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.machines')),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
            ],
            options={
                'db_table': 'MachineTemperatures',
            },
        ),
        migrations.AddField(
            model_name='machines',
            name='plant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.plant'),
        ),
        migrations.CreateModel(
            name='MachineParametersGraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('params_count', models.CharField(blank=True, max_length=200, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('machine_parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.machineparameters')),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
            ],
            options={
                'db_table': 'MachineParametersGraph',
            },
        ),
        migrations.CreateModel(
            name='LiquidPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=250, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('defects', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.defects')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.department')),
                ('machines', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.machines')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.products')),
            ],
            options={
                'db_table': 'LiquidPlant',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='plant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant'),
        ),
        migrations.AddField(
            model_name='defects',
            name='plant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.plant'),
        ),
        migrations.CreateModel(
            name='DefectNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_text', models.TextField(blank=True, null=True)),
                ('recorded_date_time', models.CharField(blank=True, max_length=100, null=True)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.defects')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.plant')),
            ],
            options={
                'db_table': 'DefectNotification',
            },
        ),
    ]
